# Index Usage Details via `explain` in MongoDB

## Overview

This guide demonstrates how to analyze and optimize MongoDB queries using the `explain()` method. You'll learn how to:
- Understand index usage
- Evaluate query performance
- Apply insights to optimize your MongoDB collections

---

## Table of Contents
1. [Introduction](#introduction)
2. [Why Use `explain()`?](#why-use-explain)
3. [Key Commands](#key-commands)
4. [Examples](#examples)
5. [Additional Resources](#additional-resources)

---

## Introduction

MongoDBâ€™s `explain()` provides details about how a query is executed. It helps in understanding:
- Index efficiency
- Execution plans
- Bottlenecks in performance

---

## Why Use `explain()`?

Using `explain()`, you can identify:
- Whether your query uses an index
- The type of index used
- The number of documents scanned vs. returned

---

## Key Commands

### Basic Syntax
```javascript
db.collection.find(query).explain();

## Execution Stages
queryPlanner: High-level overview of the query plan.
executionStats: Detailed statistics on query execution.
allPlansExecution: All possible query plans considered.

Examples
Simple Query Explanation

db.users.find({ age: { $gt: 25 } }).explain("executionStats");

Output:
{
  "queryPlanner": { ... },
  "executionStats": {
    "nReturned": 100,
    "totalKeysExamined": 200,
    "totalDocsExamined": 300
  }
}

##  Using Indexes
db.users.createIndex({ age: 1 });
db.users.find({ age: { $gt: 25 } }).explain();

